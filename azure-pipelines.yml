# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - development

pool:
  vmImage: ubuntu-latest

resources:
  - repo: self

variables:
  tag: '$(Build.BuildId)'
  dockerhubNS: 'gagneet'
  ImageNames: 'adherelive'
  ImageTag: 'portal_demo'
  azureSubscriptionEndpoint: 'adherelive-demo'
  azureSubscriptionId: 'AdhereLive'
  azureContainerRegistry: 'adherelivedemo.azurecr.io'
  azureEnvironment: 'AdhereLive-NDemo'

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: DockerCompose@0
            displayName: Build services
            inputs:
              action: Build services
              azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
              azureContainerRegistry: $(azureContainerRegistry)
              dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.yml'
              dockerComposeCommand: build node
              projectName: $(Build.Repository.Name)
              qualifyImageNames: true
              buildImages: true
              additionalImageTags: $(Build.BuildId)
          - task: DockerCompose@0
            displayName: Push services
            inputs:
              action: Push services
              azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
              azureContainerRegistry: $(azureContainerRegistry)
              dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.yml'
              projectName: $(Build.Repository.Name)
              qualifyImageNames: true
              additionalImageTags: $(Build.BuildId)
  - stage: Test
    displayName: Test & deploy image
    jobs:
      - deployment: VMDeploy
        displayName: Deploy to Azure VM
        environment:
          name: $(azureEnvironment)
          resourceType: VirtualMachine
          tags: 'adherelive-ndemo'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: ShellScript@2
                  inputs:
                    scriptPath: /home/azureuser/install-image.sh
                    failOnStandardError: false
